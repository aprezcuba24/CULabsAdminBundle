
    /**
     * Lists all {{ entity }} entities.
     *
{% if 'annotation' == format %}
     * @Route("", name="{{ route_name_prefix }}")
     * @Security("has_role('ROLE_{{ entity|upper|replace({'\\': '_'}) }}_LIST')")
{% endif %}
     *
     * @param \Symfony\Component\HttpFoundation\Request $request
     * @return \Symfony\Component\Form\Form|\Symfony\Component\HttpFoundation\RedirectResponse|\Symfony\Component\HttpFoundation\Response
     */
    public function indexAction(Request $request)
    {
{% if 'annotation' != format %}
        if (!$this->isGranted('ROLE_{{ entity|upper|replace({'\\': '_'}) }}_LIST')) {
            throw new AccessDeniedException();
        }
{% endif %}
        $this->setPage($request->get('page', $this->getPage()));
        $pager = $this->getPager();
        $filter = $this->processFilter($request);
        if ($filter instanceof Response) {
            return $filter;
        }
        $template = $request->isXmlHttpRequest()? '/admin/{{ entity|lower|replace({'\\': '/'}) }}/list.html.twig': '/admin/{{ entity|lower|replace({'\\': '/'}) }}/index.html.twig';

        return $this->render($template, [
            'pager'  => $pager,
            'filter' => $filter->createView(),
            'sort'   => $this->getSort(),
        ]);
    }

    /**
     * @param \Symfony\Component\HttpFoundation\Request $request
     * @return \Symfony\Component\Form\Form|\Symfony\Component\HttpFoundation\RedirectResponse
     */
    protected function processFilter(Request $request)
    {
        $filter = $this->getFilterForm();
        $filter->handleRequest($request);
        if ($filter->isSubmitted() && $filter->isValid()) {
            $this->setPage(1);
            $data = $filter->getData();
            if ($filter->get('reset')->isClicked()) {
                $data = [];
            }
            $this->setFilters($data);

            return $this->redirectToRoute('{{ route_name_prefix }}');
        }

        return $filter;
    }
