CULabsAdminBundle
==================

Resumen
-------
Este bundle es con el objetivo de crear el módulo de administración, fundamentalmente para la creación de los casos de uso CRUD. Incorpora funcionalidad ajax en la paginación y el ordenamiento. Tiene un diseño agradable al estilo twitter.
Este bundle depende de los bundles: 
LexikFormFilterBundle: https://github.com/lexik/LexikFormFilterBundle
CULabsjQueryBundle: https://github.com:aprezcuba24/CULabsjQueryBundle
KnpPaginatorBundle: http://github.com/KnpLabs/KnpPaginatorBundle

Instalación
-----------
Actualiza el composer.json:

        ```json
           {
               "require": {
                   "culabs/admin-bundle": "dev-master",
                   "twitter/bootstrap": "master"
               },
               "repositories": [
                   {
                       "type": "package",
                       "package": {
                           "version": "master",
                           "name": "twitter/bootstrap",
                           "source": {
                               "url": "https://github.com/twitter/bootstrap.git",
                               "type": "git",
                               "reference": "master"
                           },
                           "dist": {
                               "url": "https://github.com/twitter/bootstrap/zipball/master",
                               "type": "zip"
                           }
                       }
                   }
               ]
           }
        ```
Cree un enlace simbólico a la librería de twitter desde del directorio web.
	ln -s /dir/app..../vendor/twitter/bootstrap/ /dir/app..../web/
	
Registrar los bundles en el kernel

    // in AppKernel::registerBundles()
    $bundles = array(
        // ...
        new CULabs\AdminBundle\CULabsAdminBundle(),
        new CULabs\jQueryBundle\CULabsjQueryBundle(),
        new Knp\Bundle\PaginatorBundle\KnpPaginatorBundle(),
        new Lexik\Bundle\FormFilterBundle\LexikFormFilterBundle(),
        // ...
    );

Modo de Uso
-----------

Configurar el menu:
    parameters:
        menu.backend:
            items:
              nivel_1:
                items:
                nivel_2_A:
                    route: route1
                    roles: [ROLE_USER, ROLE_ADMIN]
                nivel_2_B:
                    route: route2
                nivel_2_C:
                    items:
                    nivel_3:
                        route: route3

    services:
        puig_global.menu_builder:
            class:     CULabs\AdminBundle\Menu\MenuConfigBuilder
            arguments: ["@knp_menu.factory", "@router", "@event_dispatcher", "@security.context"]
        puig_global.menu.backend:
            class: Knp\Menu\MenuItem
            factory_service: puig_global.menu_builder
            factory_method: getMenu
            arguments: ["@request", "%menu.backend%"]
            scope: request
            tags:
                - { name: knp_menu.menu, alias: main }

Primero crear la plantilla base para todas las páginas. Se debe incluir las librerías de jQuery y tener como nombre "backend_base.html.twig"

    {% extends 'CULabsAdminBundle:Layout:base.html.twig' %}

    {% block title %}CULabs Test{% endblock %}
    
    {% block javascript_src %}
        <script type="text/javascript" src="{{ asset('/js/jquery-1.7.1.js') }}"></script>
        <script src="{{ asset('/js/jquery-ui-1.8.12.custom.min.js') }}"></script>
        {{ parent() }}
    {% endblock %}

    {% block menu_top %}
    {{ knp_menu_render('main', {
        'template':'CULabsAdminBundle:Layout:twitter_menu.html.twig',
    }) }}
    {% endblock %}

    {% block user_name(app.user) %}

Vea la plantilla "CULabsAdminBundle:Layout:base.html.twig" para que modifique todos las plantillas que desee.

Ejectue php app/console help culabs:doctrine:crud para que vea la forma de crear un módulo.

Al ejecutar el comando "culabs:doctrine:crud" se genera el formulario para los filtros, el siguiente paso es configurar los widget correctos para cada campo según la documentación de "lexik/form-filter-bundle".

Redefinir el formulario de login
--------------------------------
Si usa FOSUserBundle puede sobrescribir el formulario de login creando la siguiente plantilla "app/Resources/FOSUserBundle/views/Security/login.html.twig" con el siguiente contenido.

    {% extends "CULabsAdminBundle:Security:login.html.twig" %}
